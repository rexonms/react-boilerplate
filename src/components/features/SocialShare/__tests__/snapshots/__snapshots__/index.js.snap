// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders component correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SocialShare
    email={
        Object {
            "body": "Let's catch up sometime soon! ",
            "subject": "Howdy",
          }
    }
    eatingLink="http://ts.la/marcus8240"
    title="My Eating Link"
    twitter="checkout out my eating link: http://ts.la/marcus8240"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="allCaps"
>
          My Eating Link
</p>,
        <EatingCodeShare
          link="http://ts.la/marcus8240"
/>,
        <div
          className="icons"
>
          <Twitter
                    tweet="checkout out my eating link: http://ts.la/marcus8240"
          />
          <Email
                    emailData={
                              Object {
                                        "body": "Let's catch up sometime soon! ",
                                        "subject": "Howdy",
                                      }
                    }
          />
</div>,
      ],
      "className": "container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "My Eating Link",
          "className": "allCaps",
        },
        "ref": null,
        "rendered": "My Eating Link",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "link": "http://ts.la/marcus8240",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Twitter
              tweet="checkout out my eating link: http://ts.la/marcus8240"
/>,
            <Email
              emailData={
                            Object {
                                          "body": "Let's catch up sometime soon! ",
                                          "subject": "Howdy",
                                        }
              }
/>,
          ],
          "className": "icons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "tweet": "checkout out my eating link: http://ts.la/marcus8240",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "emailData": Object {
                "body": "Let's catch up sometime soon! ",
                "subject": "Howdy",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="allCaps"
>
            My Eating Link
</p>,
          <EatingCodeShare
            link="http://ts.la/marcus8240"
/>,
          <div
            className="icons"
>
            <Twitter
                        tweet="checkout out my eating link: http://ts.la/marcus8240"
            />
            <Email
                        emailData={
                                    Object {
                                                "body": "Let's catch up sometime soon! ",
                                                "subject": "Howdy",
                                              }
                        }
            />
</div>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "My Eating Link",
            "className": "allCaps",
          },
          "ref": null,
          "rendered": "My Eating Link",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "link": "http://ts.la/marcus8240",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Twitter
                tweet="checkout out my eating link: http://ts.la/marcus8240"
/>,
              <Email
                emailData={
                                Object {
                                                "body": "Let's catch up sometime soon! ",
                                                "subject": "Howdy",
                                              }
                }
/>,
            ],
            "className": "icons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "tweet": "checkout out my eating link: http://ts.la/marcus8240",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "emailData": Object {
                  "body": "Let's catch up sometime soon! ",
                  "subject": "Howdy",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
